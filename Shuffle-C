#include <stdio.h>
#include <string.h>

/* TODO 1: Понять, почему при проверки на уже имеющийся (Функция adder()) слово, функция не находит идентичные слова. 
При передаче аргументов подается из str2 8 char и в buffer 51 char. Решить вот эту проблему. */
/* TODO 2: Решить проблему функций shuffle(), пока не можем заполнить buffer и передать его в массив слов. */
/* TODO 3: Доработать функцию shuffle(), добавить туда алгоритм тасовки, он почти уже имеется, осталось лишь преобразовать. */

int Success = 0;

void creater_file(int Num);

int Adder(char str2[51]);

void clear_file(int Numa);

int main()
    {
        int L;

        char str[54], str2[51];

        cheker();

        while(1)
            {
                memset(&str[0], 0, sizeof(str));

                printf("Add command: ");
                gets(str);

                if(strstr(str, "/a") != NULL)
                    {
                        printf("\tCheking\n");
                        for(int i=0; i<=54; i++)
                            {
                                if(i==0 | i==1 | i==2)
                                    {
                                        continue;
                                    }
                                else
                                    {
                                        str2[i-3] = str[i];
                                    }
                            }
                        Adder(str2);
                    }
                if(strstr(str, "/c") != NULL)
                    {
                        printf("\tClear Function --- choose file (1 or 2)\n");
                        scanf("%d", &L);

                        if(L == 1)
                            {
                                clear_file(1);
                            }
                        if(L == 2)
                            {
                                clear_file(2);
                            }
                        else
                            {
                                continue;
                            }
                    }
                if(strstr(str, "/shuffle") != NULL)
                    {
                        printf("\tShuffle Function");
                        shuffle_file();
                    }
                else
                    {
                        continue;
                    }
            }

        return 0;
    }

void cheker()
    {
        FILE *file_cheker_input, *file_cherker_output;

        file_cheker_input = fopen("DataInput.txt", "r");
        file_cherker_output = fopen("DataOutput.txt", "r");

        if(file_cheker_input != NULL)
            {
                printf("File %s finded\n", "DataInput.txt");
                fclose(file_cheker_input);
                Success += 1;
            }
        else
            {
                printf("No File 1\n");
                creater_file(1);
            }

        if(file_cherker_output != NULL)
            {
                printf("File %s finded\n", "DataOutput.txt");
                fclose(file_cherker_output);
                Success += 1;
            }
        else
            {
                printf("No File 2\n");
                creater_file(2);
            }

        if(Success == 2)
            {
                printf("Success\n");
            }
    }

void creater_file(int Num)
    {
        FILE *file_creater_input, *file_creater_output;

        if(Num == 1)
            {
                file_creater_input = fopen("DataInput.txt", "w");
                fclose(file_creater_input);
                printf("\tFile %s created\n", "DataInput.txt");
                Success += 1;
            }
        else if(Num == 2)
            {
                file_creater_output = fopen("DataOutput.txt", "w");
                fclose(file_creater_output);
                printf("\tFile %s created\n", "DataInput.txt");
                Success += 1;
            }
    }

int Adder(char str2[51])
    {
        int i, j; char buffer[51];
        FILE *file_Adder_input;

        file_Adder_input = fopen("DataInput.txt", "r+a");

        for(i=0; !feof(file_Adder_input); i++)
            {
                fgets(buffer, 51, file_Adder_input);

                for(j=0; j<51; j++)
                    {
                        //if(str2[j] == "\n" | str2[j] == "\0")
                        //    {
                        //        str2[j] = "";
                        //    }
                        if(buffer[j] == "\n" | buffer[j] == "\0")
                            {
                                memset(&buffer[j], 0, sizeof(buffer));
                            }
                    }
                printf("%s --- %s \t%d --- %d\n", str2, buffer, (sizeof(str2) / sizeof(str2[0])), (sizeof(buffer) / sizeof(buffer[0])));
                if (strcmp(str2, buffer) == 0)
                    {
                        printf("\tThis word is have\n");
                        return 1;
                    }

                memset(&buffer[0], 0, sizeof(buffer));
            }
        fputs(str2, file_Adder_input);
        fputs("\n", file_Adder_input);
        printf("\tAdded\n");

        fclose(file_Adder_input);

        return 0;
    }

void clear_file(int Numa)
    {
        FILE *file_clear_input, *file_clear_output;

        if(Numa == 1)
            {
                file_clear_input = fopen("DataInput.txt", "w");
                fclose(file_clear_input);
                printf("\tFile %s cleared\n", "DataInput.txt");
            }
        if(Numa == 2)
            {
                file_clear_output = fopen("DataOutput.txt", "w");
                fclose(file_clear_output);
                printf("\tFile %s cleared\n", "DataOutput.txt");
            }
    }

void shuffle_file()
    {
        int i, j, size = 0;
        char buffer[51];
        char words[size];

        FILE *file_shuffle_input, *file_shuffle_output;

        file_shuffle_input = ("DataInput.txt", "r");
        file_shuffle_output = fopen("DataOutput.txt", "w");

        for(i=0; !feof(file_shuffle_input); i++)
            {
                memset(&buffer[0], 0, sizeof(buffer));

                fgets(buffer, 51, file_shuffle_input);

                for(j=0; j < sizeof(buffer) / sizeof(char); j++)
                    {
                        if(buffer[j] == "\n" | buffer[j] == "\0")
                            buffer[j] = "";
                    }

                words[size] = buffer;
                size++;
            }

        printf("%s", words);
    }
